{"ast":null,"code":"var _jsxFileName = \"F:\\\\demo\\\\src\\\\jsx\\\\Form.jsx\";\nimport React, { useState } from 'react';\n\nconst Form = () => {\n  const [name, setName] = useState(\"\");\n  const [fullname, setFullName] = useState();\n\n  const inputEvent = event => {\n    // console.log(event.target.value);\n    setName(event.target.value);\n  };\n\n  const onSubmit = event => {\n    /*The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur.\r\n    For example, this can be useful when:\r\n    Clicking on a \"Submit\" button, prevent it from submitting a form\r\n    Clicking on a link, prevent the link from following the URL */\n    event.preventDefault();\n    setFullName(name);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Hello \", fullname), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your name\",\n    onChange: inputEvent,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \" Click \\uD83D\\uDE0F\"))));\n};\n\nexport default Form;","map":{"version":3,"sources":["F:/demo/src/jsx/Form.jsx"],"names":["React","useState","Form","name","setName","fullname","setFullName","inputEvent","event","target","value","onSubmit","preventDefault","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAC,MAAI;AACX,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeH,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACI,QAAD,EAAUC,WAAV,IAAuBL,QAAQ,EAApC;;AACA,QAAMM,UAAU,GAAEC,KAAD,IAAS;AACtB;AACAJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAIA,QAAMC,QAAQ,GAAEH,KAAD,IAAS;AAC5B;;;;AAIQA,IAAAA,KAAK,CAACI,cAAN;AACAN,IAAAA,WAAW,CAACH,IAAD,CAAX;AACH,GAPD;;AAQA,sBACI,uDACI;AAAM,IAAA,QAAQ,EAAEQ,QAAhB;AAA0B,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC;AAAP,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWR,QAAX,CADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,iBAA/B;AAAiD,IAAA,QAAQ,EAAEE,UAA3D;AAAuE,IAAA,KAAK,EAAEJ,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,CADJ,CADJ;AAWH,CA1BD;;AA4BA,eAAeD,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Form=()=>{\r\n    const[name,setName]=useState(\"\");\r\n    const[fullname,setFullName]=useState();\r\n    const inputEvent=(event)=>{\r\n        // console.log(event.target.value);\r\n        setName(event.target.value);\r\n    };\r\n    const onSubmit=(event)=>{\r\n/*The preventDefault() method cancels the event if it is cancelable, meaning that the default action that belongs to the event will not occur.\r\nFor example, this can be useful when:\r\nClicking on a \"Submit\" button, prevent it from submitting a form\r\nClicking on a link, prevent the link from following the URL */\r\n        event.preventDefault();\r\n        setFullName(name);\r\n    };\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} style={{width:'100%'}}>\r\n                <div>\r\n                    <h1>Hello {fullname}</h1>\r\n                    <input type=\"text\" placeholder=\"Enter your name\" onChange={inputEvent} value={name}/>\r\n                    <button type=\"submit\"> Click üòè</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}