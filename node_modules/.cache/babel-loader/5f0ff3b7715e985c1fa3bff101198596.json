{"ast":null,"code":"var _jsxFileName = \"F:\\\\demo\\\\src\\\\index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     {/* <App /> */}\n//     <h1>Hello World</h1>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n// var React = require('react');\nimport React from 'react'; // var ReactDOM = require('react-dom');\n\nimport ReactDOM from 'react-dom'; // ReactDOM.render('kya dikhana hai what to show','kha dikhana hai where to show','callback func');\n// ReactDOM.render(\n//   <h1>Hello World!!</h1>\n//   ,document.getElementById('root'));\n//render multiple elements inside ReactDOM.render() \n// place html (or can say jsx elemnts) put it in div tag\n// ReactDOM.render(\n//   <div>\n//   <h1>Hello World!!</h1>\n//   <p>Welcome</p>\n//   </div>\n//   ,document.getElementById('root'));\n//To avoid unneccesary tag place on html code while including multiple elements inside ReactDom.render()\n//we use React.fragment\n// ReactDOM.render(\n//   <React.Fragment> also u can avoid to write fragment like <>elements</>\n//   <h1>Hello World!!</h1>\n//   <p>Welcome</p>\n//   </React.Fragment>\n//   ,document.getElementById('root'));\n// const arr=['abc','def','efg'];\n// In react v16 it's possible for render()\n// to  return an array of elements \n// ReactDOM.render(\n//   [\n//   <h1>Hello World!!</h1>,\n//   <p>Welcome enjoy</p>\n//   ],\n//    document.getElementById('root'));\n// after converted by babel(Javascript Compiler) \n// ReactDOM.render(React.createElement(\"h1\",null,\"Hello world\"),document.getElementById(\"root\"));\n//traditional javascript code to render into html code \n// var h1 = document.createElement(\"h1\");\n// h1.innerHTML=\"hello world\";\n// document.getElementById(\"root\").appendChild(h1);\n//new series challenge\n\nReactDOM.render([/*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }\n}, \"NetFlix\"), /*#__PURE__*/React.createElement(\"p\", {\n  id: \"par\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }\n}, \"List of best series\"), /*#__PURE__*/React.createElement(\"ol\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }\n}, \"A\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }\n}, \"B\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }\n}, \"C\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }\n}, \"D\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }\n}, \"E\"))], document.getElementById('root'));","map":{"version":3,"sources":["F:/demo/src/index.js"],"names":["React","ReactDOM","render","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEAA,QAAQ,CAACC,MAAT,CACE,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA;AAAG,EAAA,EAAE,EAAC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFA,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,CAHF,CADF,EAYGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZH","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     {/* <App /> */}\n//     <h1>Hello World</h1>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// var React = require('react');\nimport React from 'react';\n// var ReactDOM = require('react-dom');\nimport ReactDOM from 'react-dom';\n// ReactDOM.render('kya dikhana hai what to show','kha dikhana hai where to show','callback func');\n\n// ReactDOM.render(\n//   <h1>Hello World!!</h1>\n//   ,document.getElementById('root'));\n\n//render multiple elements inside ReactDOM.render() \n// place html (or can say jsx elemnts) put it in div tag\n\n// ReactDOM.render(\n//   <div>\n//   <h1>Hello World!!</h1>\n//   <p>Welcome</p>\n//   </div>\n//   ,document.getElementById('root'));\n\n//To avoid unneccesary tag place on html code while including multiple elements inside ReactDom.render()\n//we use React.fragment\n\n// ReactDOM.render(\n//   <React.Fragment> also u can avoid to write fragment like <>elements</>\n//   <h1>Hello World!!</h1>\n//   <p>Welcome</p>\n//   </React.Fragment>\n//   ,document.getElementById('root'));\n\n// const arr=['abc','def','efg'];\n// In react v16 it's possible for render()\n// to  return an array of elements \n\n// ReactDOM.render(\n//   [\n//   <h1>Hello World!!</h1>,\n//   <p>Welcome enjoy</p>\n//   ],\n//    document.getElementById('root'));\n\n// after converted by babel(Javascript Compiler) \n// ReactDOM.render(React.createElement(\"h1\",null,\"Hello world\"),document.getElementById(\"root\"));\n\n//traditional javascript code to render into html code \n// var h1 = document.createElement(\"h1\");\n// h1.innerHTML=\"hello world\";\n// document.getElementById(\"root\").appendChild(h1);\n\n//new series challenge\n\nReactDOM.render(\n  [\n  <h1>NetFlix</h1>,\n  <p id=\"par\">List of best series</p>,\n    <ol>\n      <li>A</li>\n      <li>B</li>\n      <li>C</li>\n      <li>D</li>\n      <li>E</li>\n    </ol>\n  ],\n   document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}